<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.baiwangmaoyi.luckydraw.dao.mapper.ParticipantMapper" >
  <resultMap id="BaseResultMap" type="com.baiwangmaoyi.luckydraw.entity.Participant" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="first_name" property="firstName" jdbcType="VARCHAR" />
    <result column="last_name" property="lastName" jdbcType="VARCHAR" />
    <result column="display_name" property="displayName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="ruleset_id" property="rulesetId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, first_name, last_name, display_name, create_time, ruleset_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from participant
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectByRulesetId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select
        <include refid="Base_Column_List" />
        from participant
        where ruleset_id = #{rulesetId,jdbcType=BIGINT}
    </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from participant
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.baiwangmaoyi.luckydraw.entity.Participant" >
    insert into participant (id, first_name, last_name, 
      display_name, create_time, ruleset_id
      )
    values (#{id,jdbcType=INTEGER}, #{firstName,jdbcType=VARCHAR}, #{lastName,jdbcType=VARCHAR}, 
      #{displayName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{rulesetId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.baiwangmaoyi.luckydraw.entity.Participant" >
    insert into participant
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="firstName != null" >
        first_name,
      </if>
      <if test="lastName != null" >
        last_name,
      </if>
      <if test="displayName != null" >
        display_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="rulesetId != null" >
        ruleset_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="firstName != null" >
        #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null" >
        #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="displayName != null" >
        #{displayName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rulesetId != null" >
        #{rulesetId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.baiwangmaoyi.luckydraw.entity.Participant" >
    update participant
    <set >
      <if test="firstName != null" >
        first_name = #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null" >
        last_name = #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="displayName != null" >
        display_name = #{displayName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rulesetId != null" >
        ruleset_id = #{rulesetId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.baiwangmaoyi.luckydraw.entity.Participant" >
    update participant
    set first_name = #{firstName,jdbcType=VARCHAR},
      last_name = #{lastName,jdbcType=VARCHAR},
      display_name = #{displayName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      ruleset_id = #{rulesetId,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
